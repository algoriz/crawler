# The following code is auto generated by jpc.py
# Source JSON file: qunar\hotel_review.json
class hotel_review(object):
    def __init__(self):
        self.data = hotel_review_data()
        self.errcode = 0
        self.ret = False
    
    @staticmethod
    def from_dict(dct):
        if not dct:
            return None
        obj = hotel_review()
        obj.data = hotel_review_data.from_dict(dct.get("data"))
        obj.errcode = dct.get("errcode")
        obj.ret = dct.get("ret")
        return obj


class hotel_review_data(object):
    def __init__(self):
        self.count = 0
        self.ratingStat = hotel_review_data_ratingStat()
        self.list = []
        self.loginUser = u''
        self.identityFailed = False
    
    @staticmethod
    def from_dict(dct):
        if not dct:
            return None
        obj = hotel_review_data()
        obj.count = dct.get("count")
        obj.ratingStat = hotel_review_data_ratingStat.from_dict(dct.get("ratingStat"))
        obj.list = hotel_review_data_list_from_list(dct.get("list"))
        obj.loginUser = dct.get("loginUser")
        obj.identityFailed = dct.get("identityFailed")
        return obj


class hotel_review_data_ratingStat(object):
    def __init__(self):
        self.positiveCount = 0
        self.neutralCount = 0
        self.negativeCount = 0
    
    @staticmethod
    def from_dict(dct):
        if not dct:
            return None
        obj = hotel_review_data_ratingStat()
        obj.positiveCount = dct.get("positiveCount")
        obj.neutralCount = dct.get("neutralCount")
        obj.negativeCount = dct.get("negativeCount")
        return obj


class hotel_review_data_list_item(object):
    def __init__(self):
        self.status = 0
        self.feedOid = u''
        self.feedType = 0
        self.uid = 0
        self.toUid = 0
        self.feedTime = None
        self.originType = 0
        self.originTypeCode = 0
        self.delTypeCode = 0
        self.content = u''
        self.userIdentity = 0
        self.encodeUserName = u''
        self.feedTypeCode = 0
        self.feedIp = 0
        self.nickName = u''
        self.badgeIds = []
        self.statusCode = 0
    
    @staticmethod
    def from_dict(dct):
        if not dct:
            return None
        obj = hotel_review_data_list_item()
        obj.status = dct.get("status")
        obj.feedOid = dct.get("feedOid")
        obj.feedType = dct.get("feedType")
        obj.uid = dct.get("uid")
        obj.toUid = dct.get("toUid")
        obj.feedTime = dct.get("feedTime")
        obj.originType = dct.get("originType")
        obj.originTypeCode = dct.get("originTypeCode")
        obj.delTypeCode = dct.get("delTypeCode")
        obj.content = dct.get("content")
        obj.userIdentity = dct.get("userIdentity")
        obj.encodeUserName = dct.get("encodeUserName")
        obj.feedTypeCode = dct.get("feedTypeCode")
        obj.feedIp = dct.get("feedIp")
        obj.nickName = dct.get("nickName")
        obj.badgeIds = dct.get("badgeIds")
        obj.statusCode = dct.get("statusCode")
        return obj


def hotel_review_data_list_from_list(lst):
    if not lst:
        return None
    values = []
    for v in lst:
        values.append(hotel_review_data_list_item.from_dict(v))
    return values
